import serial
from pymodbus.client import ModbusSerialClient as ModbusClient
import struct
import time
from datetime import datetime
# Configuration for Modbus connection
gauge = ModbusClient(
    method="rtu",
    port="/dev/ttyUSB0",  # Adjust as needed to your system
    baudrate=9600,        # Adjust as needed to match your device's baud rate
    parity=serial.PARITY_NONE,
    stopbits=serial.STOPBITS_ONE,
    bytesize=serial.EIGHTBITS
)
log_file = "/home/miyatakeuchi/battery_log.txt"  # Path where data will be logged
def log_data_to_file(data):
    """Logs the data to a text file."""
    with open(log_file, "a") as file:
        file.write(data + "\n")
def read_parameters():
    """Read Phase 2 voltage and Phase 1 current from the Modbus device."""
    print("Attempting to connect to the Modbus device...")
    if not gauge.is_socket_open():
        if gauge.connect():
            print("Connected successfully.")
        else:
            print("Failed to connect to the Modbus device.")
            return None
    print("Reading registers...")
    # Read Phase 2 line to neutral voltage from register 0x0002
    start_address_voltage = 0x0002  # Modbus address for Phase 2 line to neutral volts
    num_registers_voltage =40      # Reading 2 registers (32-bit float requires 2 registers)
    result_voltage = gauge.read_input_registers(start_address_voltage, num_registers_voltage)
    if result_voltage.isError():
        print(f"Error reading Phase 2 voltage registers: {result_voltage}")
        gauge.close()
        return None
    # Combine two 16-bit registers into a 32-bit float
    voltage_L2 = struct.unpack('>f', struct.pack('>HH', result_voltage.registers[2], result_voltage.registers[1]))[0]
    # Read Phase 1 current from register 0x0006
    start_address_current = 0x0006  # Modbus address for Phase 1 current
    num_registers_current = 2       # Reading 2 registers (32-bit float)
    result_current = gauge.read_input_registers(start_address_current, num_registers_current)
    if result_current.isError():
        print(f"Error reading Phase 1 current registers: {result_current}")
        gauge.close()
        return None
    # Combine two 16-bit registers into a 32-bit float
    current_L1 = struct.unpack('>f', struct.pack('>HH', result_current.registers[0], result_current.registers[1]))[0]
    return voltage_L2, current_L1
# Main loop to read and log data periodically
while True:
    parameters = read_parameters()
    if parameters is not None:
        voltage_L2, current_L1 = parameters
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        data = f"{timestamp}, Phase 2 Voltage: {voltage_L2:.2f}V, Phase 1 Current: {current_L1:.2f}A"
        log_data_to_file(data)
        print(f"Logged data: {data}")
    else:
        print("Failed to read data from the Modbus device.")
    time.sleep(60)  # Wait for 60 seconds before the next reading
